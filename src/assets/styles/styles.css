@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");
/* .roboto-regular {
	font-family: 'Roboto', sans-serif;
	font-weight: 400;
	font-style: normal;
}

.roboto-bold {
	font-family: 'Roboto', sans-serif;
	font-weight: 700;
	font-style: normal;
} */
:root {
  /** CSS DARK THEME PRIMARY COLORS */
  --color-primary-100: #0077ff;
  --color-primary-200: #4a85ff;
  --color-primary-300: #6b93ff;
  --color-primary-400: #85a1ff;
  --color-primary-500: #9cb0ff;
  --color-primary-600: #b2bfff;
  /** CSS DARK THEME SURFACE COLORS */
  --color-surface-100: #121212;
  --color-surface-200: #282828;
  --color-surface-300: #3f3f3f;
  --color-surface-400: #575757;
  --color-surface-500: #717171;
  --color-surface-600: #8b8b8b;
  /** CSS DARK THEME MIXED SURFACE COLORS */
  --color-surface-mixed-100: #1a1625;
  --color-surface-mixed-200: #2f2b3a;
  --color-surface-mixed-300: #46424f;
  --color-surface-mixed-400: #5e5a66;
  --color-surface-mixed-500: #76737e;
  --color-surface-mixed-600: #908d96;
  --color-white: #ffffff;
  --border-radius: 0.5rem;
  --border: 1px solid inherit;
  --font-family-base: "Roboto", sans-serif;
  --container-width: 1200px;
  --container-padding-x: 1rem;
  --section-padding-y: 5rem;
  --transition-duration: 0.2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  -webkit-clip-path: inset(100%);
          clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

@media (max-width: 768px) {
  .hidden-mobile {
    display: none;
  }
}

@media (min-width: 769px) {
  .visible-mobile {
    display: none;
  }
}

/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
  overflow-x: hidden;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
  list-style: none;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
   Упрощаем работу с изображениями
  */
img {
  display: block;
  max-width: 100%;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
   Пригодится в большинстве ситуаций
   (когда, например, нужно будет "прижать" футер к низу сайта)
  */
  height: 100%;
}

/**
   Плавный скролл
  */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
   Пригодится в большинстве ситуаций
   (когда, например, нужно будет "прижать" футер к низу сайта)
  */
  min-height: 100%;
  /**
   Унифицированный интерлиньяж
  */
  line-height: 1.5;
}

/**
   Приводим к единому цвету svg-элементы
  */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
svg * {
  transition-property: fill, stroke;
}

/**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
body {
  font-size: clamp(14px, 1.1111111111vw, 16px);
  font-family: var(--font-family-base);
  font-weight: 400;
  line-height: 1.28;
  color: var(--color-white);
  background-color: var(--color-surface-100);
}

a {
  text-decoration: none;
  color: inherit;
  cursor: pointer;
}

button {
  cursor: pointer;
}

h1,
h2,
h3,
h4 {
  font-weight: 700;
  margin: 0;
  padding-bottom: 1rem;
}

h1 {
  font-size: clamp(48px, 4.4444444444vw, 64px);
}

h2 {
  font-size: clamp(32px, 3.3333333333vw, 48px);
}

h3 {
  font-size: clamp(24px, 2.2222222222vw, 32px);
}

h4 {
  font-size: clamp(20px, 1.6666666667vw, 24px);
}

.header__inner {
  height: 4rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  -moz-column-gap: 0;
       column-gap: 0;
}
.header__inner > a {
  display: flex;
  justify-content: space-between;
  align-items: center;
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
  font-weight: 700;
}
.header__menu-list {
  display: flex;
  justify-content: space-between;
  align-items: center;
  -moz-column-gap: 0;
       column-gap: 0;
}
.header__menu-link {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  height: 4rem;
  padding: 0 1.5rem;
  transition-duration: var(--transition-duration);
}
@media (max-width: 1024px) {
  .header__menu-link {
    padding: 0 1.25rem;
  }
}
.header__menu-link.active {
  color: var(--color-primary-500);
  border-bottom: 0.25rem solid var(--color-primary-500);
}
.header__menu-link:hover {
  color: var(--color-surface-100);
  background: var(--color-primary-400);
}
.header__menu-link:active {
  color: var(--color-surface-100);
  background: var(--color-primary-300);
}

.button {
  height: 3rem;
  padding: 0 1.5rem;
  color: var(--color-surface-100);
  background-color: var(--color-primary-500);
  border: var(--border);
  border-radius: var(--border-radius);
  transition-duration: var(--transition-duration);
}
.button--transparent {
  color: var(--color-primary-500);
  background-color: initial;
  border: 1px solid var(--color-primary-500);
}
.button:hover {
  color: var(--color-surface-100);
  background: var(--color-primary-400);
}
.button:active {
  color: var(--color-surface-100);
  background: var(--color-primary-300);
  border: 1px solid var(--color-primary-300);
}

.burger-button {
  width: 48px;
  height: 48px;
  border: none;
  border-radius: var(--border-radius);
  background: none;
  position: relative;
}
.burger-button:hover {
  background-color: var(--color-primary-400);
}
.burger-button:active {
  background: var(--color-primary-300);
}
.burger-button::after {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  width: 50%;
  height: 2px;
  background-color: var(--color-white);
  border-radius: 32px;
  box-shadow: 0 -8px var(--color-white), 0 8px var(--color-white);
}/*# sourceMappingURL=styles.css.map */